
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
//apply plugin: 'kotlin-kapt'


android {

    compileSdkVersion 27

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 25
        versionCode 1
        versionName "1.0.0"
        applicationId "com.github.jmfayard.okandroid"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/rxjava.properties'
    }

}

dependencies {
    compile(project(path: ':common'))
    compile(project(path: ':androidcommon'))
    compile(project(path: ':room'))

    // Kotlin
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    // Support & google libraries
    compile "com.android.support:multidex:1.0.2"
    compile "com.android.support:support-v4:${versions.support}"
    compile "com.android.support:appcompat-v7:${versions.support}"
    compile "com.android.support:preference-v7:${versions.support}"
    compile "com.android.support:design:${versions.support}"
    compile "com.android.support:percent:${versions.support}"
    compile "com.android.support:cardview-v7:${versions.support}"


    /** JSR-305 nullability annotations: **/
    compileOnly "com.google.code.findbugs:jsr305:3.0.2"
    testCompileOnly "com.google.code.findbugs:jsr305:3.0.2"

    // http://rxmarbles.com/
    // http://reactivex.io/documentation/operators.html
    // https://github.com/ReactiveX/RxJava/wiki
    compile "io.reactivex.rxjava2:rxjava:${versions.rxjava2}"

    // https://github.com/ReactiveX/RxAndroid
//    compile "io.reactivex.rxjava2:rxandroid:${versions.rxandroid}"

    // https://github.com/ReactiveX/RxKotlin
    compile "io.reactivex.rxjava2:rxkotlin:${versions.rxkotlin2}"

    // https://github.com/JakeWharton/RxBinding
    compile "com.jakewharton.rxbinding2:rxbinding-kotlin:${versions.rxbinding}"
    compile "com.jakewharton.rxbinding2:rxbinding-support-v4-kotlin:${versions.rxbinding}"



    // Retrofit
    // http://square.github.io/retrofit/
    // https://futurestud.io/tutorials/retrofit-getting-started-and-android-client
    compile "com.squareup.retrofit2:retrofit:${versions.retrofit}"
    compile "com.squareup.retrofit2:converter-moshi:${versions.retrofit}"
//    compile "com.squareup.retrofit2:adapter-rxjava:${versions.retrofit}"
    compile "com.squareup.retrofit2:retrofit-mock:${versions.retrofit}"
    compile "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0"
//    compile "com.squareup.retrofit2:converter-wire:${versions.retrofit}"
//    compile "com.squareup.retrofit2:converter-jackson:${versions.retrofit}"
//    compile "com.squareup.retrofit2:converter-gson:${versions.retrofit}"
//    compile "com.squareup.retrofit2:converter-simplexml:${versions.retrofit}"
//    compile "com.squareup.retrofit2:converter-protobuf:${versions.retrofit}"

    compile "com.tbruyelle.rxpermissions2:rxpermissions:0.9.5@aar"


    // https://github.com/square/okhttp/wiki/Recipes
    compile "com.squareup.okhttp3:okhttp:${versions.okhttp}"
    compile "com.squareup.okhttp3:logging-interceptor:${versions.okhttp}"

    // https://github.com/square/moshi
    compile "com.squareup.moshi:moshi:${versions.moshi}"

    // https://github.com/square/okio
    compile group: 'com.squareup.okio', name: 'okio', version: versions.okio


    //compile "com.google.dagger:dagger:${versions.dagger2}"
    //kapt "com.google.dagger:dagger-compiler:${versions.dagger2}"

    // https://github.com/JakeWharton/timber
    compile "com.jakewharton.timber:timber:${versions.timber}"
//    compile "org.slf4j:log4j-over-slf4j:1.7.21" //remove?
//    compile "com.arcao:slf4j-timber:3.0" //remove?


    compile "uk.co.chrisjenx:calligraphy:${versions.calligraphy}"

    compile group: "org.javamoney", name: "moneta-bp", version: "1.1"


//    compile "com.jakewharton:butterknife:${versions.butterknife}"
//    kapt "com.jakewharton:butterknife-compiler:${versions.butterknife}"

    // https://github.com/hotchemi/PermissionsDispatcher
//    compile "com.github.hotchemi:permissionsdispatcher:${versions.permissions}"
//    kapt "com.github.hotchemi:permissionsdispatcher-processor:${versions.permissions}"



    compile "com.android.support.constraint:constraint-layout:${versions.constraint}"


    // Magellan, the Simplest Navigation for Android
    // https://github.com/wealthfront/magellan
    compile "com.wealthfront:magellan:${versions.magellan}"
    compile "com.wealthfront:magellan-support:${versions.magellan}"
    compile "com.wealthfront:magellan-rx:${versions.magellan}"


    // https://github.com/pawegio/KAndroid
//    compile 'com.pawegio.kandroid:kandroid:0.8.0'

//    kapt "com.android.databinding:compiler:${versions.android_gradle}"

    // https://github.com/MEiDIK/SlimAdapter
    // A slim & clean & typeable Adapter without# VIEWHOLDER
    compile "net.idik:slimadapter:${versions.slimadapter}"

    // https://github.com/pawegio/KAndroid
//    compile 'com.pawegio.kandroid:kandroid:0.8.1@aar'


    // http://marcinmoskala.com/android/kotlin/2017/05/05/still-mvp-or-already-mvvm.html
    compile "com.github.MarcinMoskala:KotlinAndroidViewBindings:${versions.KotlinAndroidViewBindings}"


    // https://developer.android.com/topic/libraries/architecture/adding-components.html
//    compile "android.arch.persistence.room:runtime:${versions.architecture}"
//    compile "android.arch.persistence.room:rxjava2:${versions.architecture}"
//    kapt "android.arch.persistence.room:compiler:${versions.architecture}"
//    compile "android.arch.lifecycle:runtime:${versions.architecture}"
//    compile "android.arch.lifecycle:extensions:${versions.architecture}"
//    kapt "android.arch.lifecycle:compiler:${versions.architecture}"

    // https://github.com/moove-it/fakeit
    compile 'com.github.moove-it:fakeit:v0.7'

    // https://github.com/afollestad/material-dialogs
    compile "com.afollestad.material-dialogs:core:${versions.materialDialogs}"


    // https://github.com/evernote/android-job
    compile 'com.evernote:android-job:' + versions.androidjob

    // https://github.com/android/android-ktx
    implementation 'androidx.core:core-ktx:' + versions.ktx

    /****** TESTING ****/

    /**
      KotlinTest DSL https://github.com/kotlintest/kotlintest/blob/master/doc/reference.md
      KotlinTest Matchers: https://github.com/kotlintest/kotlintest/blob/master/doc/matchers.md
      Mockito-Kotlin https://github.com/nhaarman/mockito-kotlin/wiki/Mocking-and-verifying
     */
    testCompile "io.kotlintest:kotlintest:${versions.kotlintest}"
    testCompile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testCompile "junit:junit:${versions.junit}"
    testCompile "com.nhaarman:mockito-kotlin:1.5.0"

    testCompile "com.squareup.okhttp3:mockwebserver:${versions.okhttp}"
    testCompile "android.arch.persistence.room:testing:${versions.architecture}"

    androidTestCompile "com.android.support.test.espresso:espresso-core:${versions.espresso}"
    androidTestCompile "com.android.support.test.espresso:espresso-contrib:${versions.espresso}"
    androidTestCompile "io.kotlintest:kotlintest:${versions.kotlintest}"

}

//tasks.whenTaskAdded { task ->
//  if (task.name.startsWith("lint")) {
//        task.enabled = false
//}
//}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
    }
}
